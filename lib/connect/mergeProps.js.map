{"version":3,"sources":["../../src/connect/mergeProps.js"],"names":["verifyPlainObject","require","defaultMergeProps","stateProps","dispatchProps","ownProps","wrapMergePropsFunc","mergeProps","initMergePropsProxy","dispatch","displayName","pure","areMergedPropsEqual","hasRunOnce","mergedProps","mergePropsProxy","nextMergedProps","process","env","NODE_ENV","whenMergePropsIsFunction","undefined","whenMergePropsIsOmitted","module","exports"],"mappings":";;;;AAAA,IAAMA,oBAAoBC,QAAQ,4BAAR,CAA1B;;AAEA,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,aAAvC,EAAsDC,QAAtD,EAAgE;AAC9D,sBAAYA,QAAZ,EAAyBF,UAAzB,EAAwCC,aAAxC;AACD;;AAED,SAASE,kBAAT,CAA4BC,UAA5B,EAAwC;AACtC,SAAO,SAASC,mBAAT,CACLC,QADK,QAEL;AAAA,QADYC,WACZ,QADYA,WACZ;AAAA,QADyBC,IACzB,QADyBA,IACzB;AAAA,QAD+BC,mBAC/B,QAD+BA,mBAC/B;;AACA,QAAIC,aAAa,KAAjB;AACA,QAAIC,oBAAJ;;AAEA,WAAO,SAASC,eAAT,CAAyBZ,UAAzB,EAAqCC,aAArC,EAAoDC,QAApD,EAA8D;AACnE,UAAMW,kBAAkBT,WAAWJ,UAAX,EAAuBC,aAAvB,EAAsCC,QAAtC,CAAxB;;AAEA,UAAIQ,UAAJ,EAAgB;AACd,YAAI,CAACF,IAAD,IAAS,CAACC,oBAAoBI,eAApB,EAAqCF,WAArC,CAAd,EACEA,cAAcE,eAAd;AAEH,OAJD,MAIO;AACLH,qBAAa,IAAb;AACAC,sBAAcE,eAAd;;AAEA,YAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EACEnB,kBAAkBc,WAAlB,EAA+BJ,WAA/B,EAA4C,YAA5C;AACH;;AAED,aAAOI,WAAP;AACD,KAhBD;AAiBD,GAvBD;AAwBD;;AAED,SAASM,wBAAT,CAAkCb,UAAlC,EAA8C;AAC5C,SAAQ,OAAOA,UAAP,KAAsB,UAAvB,GACHD,mBAAmBC,UAAnB,CADG,GAEHc,SAFJ;AAGD;;AAED,SAASC,uBAAT,CAAiCf,UAAjC,EAA6C;AAC3C,SAAQ,CAACA,UAAF,GACH;AAAA,WAAML,iBAAN;AAAA,GADG,GAEHmB,SAFJ;AAGD;;AAEDE,OAAOC,OAAP,GAAiB,CACfJ,wBADe,EAEfE,uBAFe,CAAjB","file":"mergeProps.js","sourcesContent":["const verifyPlainObject = require('../utils/verifyPlainObject')\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return { ...ownProps, ...stateProps, ...dispatchProps }\n}\n\nfunction wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(\n    dispatch, { displayName, pure, areMergedPropsEqual }\n  ) {\n    let hasRunOnce = false\n    let mergedProps\n\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps))\n          mergedProps = nextMergedProps\n\n      } else {\n        hasRunOnce = true\n        mergedProps = nextMergedProps\n\n        if (process.env.NODE_ENV !== 'production')\n          verifyPlainObject(mergedProps, displayName, 'mergeProps')\n      }\n\n      return mergedProps\n    }\n  }\n}\n\nfunction whenMergePropsIsFunction(mergeProps) {\n  return (typeof mergeProps === 'function')\n    ? wrapMergePropsFunc(mergeProps)\n    : undefined\n}\n\nfunction whenMergePropsIsOmitted(mergeProps) {\n  return (!mergeProps)\n    ? () => defaultMergeProps\n    : undefined\n}\n\nmodule.exports = [\n  whenMergePropsIsFunction,\n  whenMergePropsIsOmitted\n]\n"]}